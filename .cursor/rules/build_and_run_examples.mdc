# 如何运行 `examples/nextjs-app` 示例

本文档提供了在 `yai-nexus-fekit` monorepo 中成功运行 `examples/nextjs-app` 和 `examples/python-backend` 的详细步骤。

## 核心原则

1.  **使用 `pnpm`**：本项目是一个 monorepo，使用 `pnpm` 进行工作区（workspace）管理。**必须**从项目根目录使用 `pnpm` 命令，不要在子目录中使用 `npm` 或 `yarn`。
2.  **客户端/服务器代码分离**：`@yai-nexus/fekit` 包被设计为同时用于 Next.js 的前端和后端。为了防止将仅服务器端的代码（如 Node.js 内置模块）打包到客户端，包的结构被分成了独立的客户端和服务器端入口。


---

## 完整构建和运行步骤

### 1. 环境设置

首先，确保项目环境已正确配置。

#### a. pnpm 工作区配置

项目根目录必须包含一个 `pnpm-workspace.yaml` 文件，以告知 pnpm 如何管理此 monorepo。`pnpm` 不会读取 `package.json` 中的 `workspaces` 字段。

**`pnpm-workspace.yaml` 文件内容:**

```yaml
packages:
  # @yai-nexus/fekit 包
  - 'packages/*'
  # 示例应用
  - 'examples/nextjs-app'
```

> **注意**: 我们明确指定了 `examples/nextjs-app`，以避免无意中包含该目录下的其他非 pnpm 项目（如 `python-backend`）。

#### b. 安装依赖

在配置好 `pnpm-workspace.yaml` 后，从项目根目录运行以下命令来安装所有依赖项。pnpm 会自动处理所有工作区之间的链接。

```bash
pnpm install
```

### 2. 构建核心包

在对 `@yai-nexus/fekit` 包进行任何代码更改后，都需要重新构建它。

```bash
# 从项目根目录运行
pnpm --filter @yai-nexus/fekit build
```

该包的 `tsup.config.ts` 和 `package.json` 已被配置为构建分离的客户端和服务器端文件。

### 3. 运行 Next.js 示例应用

#### a. 检查导入路径

确保示例应用中的导入路径是正确的：
*   **客户端组件** (如 `src/app/page.tsx`) 应从 `@yai-nexus/fekit/client` 导入。
*   **服务器端代码** (如 `src/app/api/copilotkit/route.ts`) 应从 `@yai-nexus/fekit/server` 导入。

#### b. 运行开发服务器

从项目根目录运行以下命令：

```bash
pnpm --filter nextjs-app dev
```

> **注意**: `nextjs-app` 的 `package.json` 中的 `dev` 脚本应为 `"next dev"`，不包含 `--turbopack` 参数，以确保与我们的 Webpack 配置兼容。

服务器将启动在 `http://localhost:3000` (或可用的下一个端口)。请你看一看控制台的输出，检查是否存在异常。在没有异常的前提下，再进行下一步

### 4. 运行 Python 后端

在单独的终端中，启动 Python 后端服务。

```bash
# 切换到 Python 后端目录
cd examples/python-backend

# (如果需要) 创建并激活虚拟环境
python -m venv .venv
source .venv/bin/activate

# 安装依赖
pip install -r requirements.txt

# 启动服务 (默认运行在 http://localhost:8000)
python main.py
```

至此，前端和后端服务都已成功运行。请你看一看控制台的输出，检查是否存在异常。在没有异常的前提下，再进行下一步。您可以在浏览器中访问 Next.js 应用并与 AI 助手进行交互。

---

## 故障排查经验

*   **`command not found: next`**: 这个错误通常是因为没有使用 `pnpm` 或者没有正确配置 `pnpm-workspace.yaml` 导致的。请确保遵循上述步骤。
*   **`fs/promises` 或其他 Node.js 模块错误**: 这意味着客户端代码意外地导入了服务器端模块。请检查 `@yai-nexus/fekit` 的 `package.json` 中的 `exports` 字段是否正确，以及示例应用的导入路径是否使用了 `/client` 和 `/server` 后缀。
*   **服务启动但页面返回 500 错误**: 这通常是运行时错误。请在观察终端中打印的详细错误日志以定位问题。

